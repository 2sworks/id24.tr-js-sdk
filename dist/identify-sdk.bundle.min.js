var IdentifySDK=function(e){"use strict";const t={CLOSE:-1,EMERGENCY:0,ALERT:1,CRITICAL:2,ERROR:3,WARNING:4,NOTICE:5,INFO:6,DEBUG:7};class i{currentLogLevel=t.INFO;constructor(e){this.currentLogLevel=e}setLevel(e){this.currentLogLevel=e}log(e,i,s={}){if(e<=this.currentLogLevel){const n=Object.keys(t).find((i=>t[i]===e)),o=`[${(new Date).toISOString()}] [${n}] ${i}`;switch(e){case t.EMERGENCY:case t.ALERT:case t.CRITICAL:case t.ERROR:console.error(o,s);break;case t.WARNING:console.warn(o,s);break;case t.NOTICE:case t.INFO:console.info(o,s);break;case t.DEBUG:console.debug(o,s)}}}emergency(e,i){this.log(t.EMERGENCY,e,i)}alert(e,i){this.log(t.ALERT,e,i)}critical(e,i){this.log(t.CRITICAL,e,i)}error(e,i){this.log(t.ERROR,e,i)}warning(e,i){this.log(t.WARNING,e,i)}notice(e,i){this.log(t.NOTICE,e,i)}info(e,i){this.log(t.INFO,e,i)}debug(e,i){this.log(t.DEBUG,e,i)}called(e,i){this.log(t.DEBUG,"Çağırılan method"+e,i)}}class s{constructor(e){this.api=e.api,this.socket=e.socket,this.stun=e.stun,this.turn=e.turn,this.lifeCycle=e.lifeCycle,this.options=e.options,this.myVideoElement=e.myVideoElement,this.peerVideoElement=e.peerVideoElement,this.logger=new i(e.logLevel),this.peerConnection=null,this.webSocket=null,this.startCallTimeout=null,this.closed=!1,this.context={identId:null,identData:{customer_uid:null,ws_url:null},lang:null,projectId:null,uid:null,deviceInfo:{platform:null,osVersion:null,deviceModel:null,deviceBrand:null},sign_lang:null},this.logger.info("Identification kuruldu",null)}async startIdentification(e,t,i){if(!e||!t)throw new Error("identId ve lang zorunludur");this.context.deviceInfo=this.getDeviceInfo(),this.context.sign_lang=i;try{const t=await fetch(`${this.api}/mobile/getIdentDetails/${e}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(this.options.identityType)});if(!t.ok){const e=await t.json().catch((()=>({})));throw this.logger.error("Fetch başarısız (getIdentDetails)",e.message||t.statusText),new Error("Müşteri bilgileri alınamadı: "+(e.message||t.statusText))}{const e=await t.json();if(!e.result||200!==e.response_status)throw new Error("Müşteri bilgileri alınamadı");this.context.identData=e.data,this.socket.url=this.context.identData?.ws_url,this.context.projectId=this.context.identData?.project_id,this.context.uid=this.context.identData?.customer_uid,this.logger.debug("Ident Detayları = "+JSON.stringify(this.context.identData))}}catch(e){throw this.logger.error("Fetch sırasında beklenmedik hata",e.message),new Error("İşlem sırasında hata oluştu: "+e.message)}const s=`${this.socket.url}?sessionId=${e}&lang=${t}`;try{this.webSocket=new WebSocket(s);const i=this.webSocket;window.addEventListener("beforeunload",(()=>{this.logger.warning("[WS] Sayfa yenilemesi öncesi socket kapatılıyor"),i&&i.readyState===WebSocket.OPEN&&(this.logger.warning("[WS] Sayfa yenilemesi öncesi socket kapatıldı"),i.close(1e3,"Page refresh/close"))})),this.webSocket.onopen=()=>{this.logger.info("[WS] Bağlantı başlatıldı"),this.context.identId=e,this.context.lang=t;try{this.webSocket.send(JSON.stringify({type:"start",identId:e,lang:t})),this.logger.info("WebSocket bağlantısı kuruldu ve başlatma mesajı gönderildi.")}catch(e){throw this.logger.error("Başlatma mesajı gönderilemedi",e.message),new Error("Başlatma mesajı gönderilemedi: "+e.message)}},this.webSocket.onerror=e=>{throw this.logger.error("WebSocket bağlantı hatası",e?.message||e),this.lifeCycle?.socket?.onError?.(e),this.startCallTimeout&&(clearTimeout(this.startCallTimeout),this.startCallTimeout=null),new Error("WebSocket bağlantı hatası: "+(e?.message||"Bilinmeyen hata"))},this.webSocket.onclose=()=>{this.startCallTimeout&&(clearTimeout(this.startCallTimeout),this.startCallTimeout=null),this.closed||(this.logger.info("[WS] Bağlantı kapatıldı"),this.lifeCycle?.socket?.onConnectionLost?.())};const n=this.webSocket,o=n.send;n.send=e=>{try{if(this.logger.debug("[WS] Mesaj gönderiliyor",e),n.readyState===WebSocket.OPEN)return o.call(n,e);this.logger.warning("WS kapalı, mesaj gönderilemedi",e)}catch(e){this.logger.error("WS gönderim hatası",e.message)}},this.webSocket.onmessage=async e=>{let t;this.logger.debug("[WS] Mesaj geldi",e.data);try{t=JSON.parse(e.data)}catch(e){return void this.logger.error("Gelen mesaj parse edilemedi",e.message)}this.logger.debug("[WS] Mesaj geldi",e.data);const i=t.action;switch(i){case"sysMsg":this.subscribe();break;case"newSub":this.newSub();break;case"subscribed":this.subscribed();break;case"preSub":case"queueInfo":case"imOnline":case"getQueueInfo":case"enableCallButton":break;case"subRejected":await this.refuseJoin(t);break;case"queueStats":this.lifeCycle?.videoCall?.onQueueUpdate?.(t),0===t?.countMember&&this.lifeCycle?.room?.onAgentCome?.(t);break;case"imOffline":await this._clearPeerData(),this.lifeCycle?.room?.onAgentLeave?.(t);break;case"initCall":this.lifeCycle?.videoCall?.onCall?.(t);break;case"missedCall":this.startCallTimeout&&(clearTimeout(this.startCallTimeout),this.startCallTimeout=null),this.lifeCycle?.videoCall?.onCancel?.(t);break;case"startCall":await this._startCall(!1);break;case"sdp":await this.peerConnection.setRemoteDescription(new RTCSessionDescription(t.sdp));break;case"candidate":await this.peerConnection.addIceCandidate(new RTCIceCandidate(t.candidate));break;case"terminateCall":this.startCallTimeout&&(clearTimeout(this.startCallTimeout),this.startCallTimeout=null),await this._terminateCall();break;default:this.logger.warning(`Bilinmeyen WS action alındı: ${i}`)}}}catch(e){throw this.logger.error("WebSocket başlatılamadı",e.message),new Error("WebSocket başlatılamadı: "+e.message)}}async answerCall(){if(!this.myVideoElement||!this.peerVideoElement)throw this.logger.error("myVideoElement ve peerVideoElement boş olamaz"),new Error("myVideoElement ve peerVideoElement boş olamaz");this.startCallTimeout=setTimeout((async()=>{await this._startCall(!0),this.startCallTimeout=null}),3e3)}async answerCallWithElements(e,t){if(!e||!t)throw this.logger.error("myVideoElement ve peerVideoElement boş olamaz"),new Error("myVideoElement ve peerVideoElement boş olamaz");this.startCallTimeout=setTimeout((async()=>{this.myVideoElement=e,this.peerVideoElement=t,await this._startCall(!0),this.startCallTimeout=null}),3e3)}async _terminateCall(){await this._clearPeerData(),this.lifeCycle?.videoCall?.onTerminate()}async _clearPeerData(){if(this.peerConnection){this.peerConnection.getSenders().forEach((e=>{e.track&&e.track.stop()})),this.peerConnection.close();this.myVideoElement.srcObject&&(this.myVideoElement.srcObject.getTracks().forEach((e=>e.stop())),this.myVideoElement.srcObject=null),this.peerVideoElement.srcObject&&(this.peerVideoElement.srcObject.getTracks().forEach((e=>e.stop())),this.peerVideoElement.srcObject=null)}}getDeviceInfo(){const e=navigator.userAgent||navigator.vendor||window.opera,t={deviceModel:null,platform:null};return t.platform="JSSDK",/windows phone/i.test(e)?t.deviceModel="Windows Phone":/windows/i.test(e)?t.deviceModel="Windows":/android/i.test(e)?t.deviceModel="Android":/iPad|iPhone|iPod/.test(e)?t.deviceModel="iOS":/Mac OS X/.test(e)?t.deviceModel="macOS":/linux/i.test(e)&&(t.deviceModel="Linux"),/firefox|fxios/i.test(e)?t.deviceModel="Firefox":/chrome|crios/i.test(e)?t.deviceModel="Chrome":/safari/i.test(e)?t.deviceModel="Safari":/edg/i.test(e)&&(t.deviceModel="Edge"),this.logger.debug("Cihaz bilgisi",JSON.stringify(t)),t}async refuseJoin(e){let t=e?.message??e?.content??null;this.logger.warning("Görüşme reddedildi",t||"Unknown"),t?this.lifeCycle?.videoCall?.onRefuse?.(t):this.lifeCycle?.videoCall?.onRefuse?.("Unknown")}subscribe(){this.logger.debug("subscribe() çağrıldı"),this.webSocket.send(JSON.stringify({action:"subscribe",room:this.context.uid,project_id:this.context.projectId,location:"Call Wait Screen",deviceInfo:this.context.deviceInfo}))}subscribed(){this.logger.debug("subscribed() çağrıldı");const e={steps:{video:!1}};null!=this.context.sign_lang&&(e.sign_language=this.context.sign_lang?1:0),this.webSocket.send(JSON.stringify({action:"stepChanged",location:"Call Wait Screen",project_id:this.context.projectId,room:this.context.uid,steps:e}))}newSub(){this.logger.debug("newSub() çağrıldı"),this.webSocket.send(JSON.stringify({action:"imOnline",room:this.context.uid}))}async close(){try{if(this.closed=!0,this.webSocket&&this.webSocket.readyState===WebSocket.OPEN&&this.webSocket.close(1e3,"Finished"),this.peerConnection){this.peerConnection.getSenders().forEach((e=>{e.track&&e.track.stop()})),await this._clearPeerData(),this.peerConnection=null}}catch(e){this.logger.error("[WS] kapatılırken hata oluştu:",e?.message)}}async _startCall(e){try{this.peerConnection=new RTCPeerConnection({iceServers:[{urls:"stun:"+this.stun.url+":"+this.stun.port},{urls:"turn:"+this.turn.api+":"+this.turn.port,credential:this.turn.password,username:this.turn.username}]})}catch(e){throw this.logger.error("PeerConnection oluşturulamadı",e.message),e}await this._setLocalMedia(e),this.peerConnection.onicecandidate=e=>{e.candidate&&this.webSocket.send(JSON.stringify({action:"candidate",candidate:e.candidate,room:this.context.uid}))},this.peerConnection.ontrack=e=>{this.peerVideoElement.srcObject||(this.peerVideoElement.srcObject=e.streams[0],this.peerVideoElement.muted=!1,this.peerVideoElement.volume=1)},this.peerConnection.oniceconnectionstatechange=()=>{switch(this.peerConnection.iceConnectionState){case"disconnected":case"failed":this.logger.error("Ice connection state is failed/disconnected");break;case"closed":this.logger.error("Ice connection state is 'closed'")}},this.peerConnection.onsignalingstatechange=async()=>{if(this.logger.debug("Signalling durumu değişti, yeni durum ="+this.peerConnection.signalingState),"closed"===this.peerConnection.signalingState)this.logger.info("Signalling state is 'closed'"),await this._terminateCall()}}async _setLocalMedia(e){this.logger.called("_setLocalMedia"),await navigator.mediaDevices.getUserMedia({video:{facingMode:"user"},audio:!0}).then((async t=>{this.myVideoElement.srcObject=t,t.getTracks().forEach((e=>{this.peerConnection.addTrack(e,t)})),e?await this.peerConnection.createOffer().then((async e=>{this.webSocket.send(JSON.stringify({action:"startCall",room:this.context.uid})),await this._description(e),this.webSocket.send(JSON.stringify({action:"sdp",sdp:e,room:this.context.uid}))})):await this.peerConnection.createAnswer().then((async e=>{await this._description(e)}))})).catch((e=>{e.name,this.logger.error("SET_LOCAL_MEDIA EX Message = ",e.message)}))}static checkBrowserCompatibility(){const e=navigator.userAgent,t=e.match(/(firefox|msie|trident|chrome|safari|opr|edg)\/?\s*(\d+)/i)||[],i=t[1]?t[1].toLowerCase():"",s=parseInt(t[2],10),n="chrome"===i&&s>=60||"firefox"===i&&s>=55||"edg"===i&&s>=79||"safari"===i&&s>=12||"opr"===i&&s>=47;if("safari"===i){const t=/iP(hone|od|ad)/.test(e),i=e.match(/Version\/(\d+)/),s=i?parseInt(i[1],10):0;if((t||e.includes("Macintosh"))&&s>=12)return}return n}async _description(e){this.logger.debug("Local SDP set ediliyor",e?.type),await this.peerConnection.setLocalDescription(e)}}class n{constructor(e){this.identityType=e.identityType,this.nfcExceptionCount=e.nfcExceptionCount,this.callConnectionTimeOut=e.callConnectionTimeOut,this.videoRecordTime=e.videoRecordTime,this.openIntroPage=e.openIntroPage}toJSON(){return{identityType:this.identityType,nfcExceptionCount:this.nfcExceptionCount,callConnectionTimeOut:this.callConnectionTimeOut,videoRecordTime:this.videoRecordTime,openIntroPage:this.openIntroPage}}}return e.IdentifyLogLevels=t,e.IdentifyLogger=i,e.IdentifyModuleTypes={SIGNATURE:"SIGNATURE",VIDEO_RECORD:"VIDEO_RECORD",TAKE_SELFIE:"TAKE_SELFIE",SPEECH_TEST:"SPEECH_TEST",IDENTIFICATION_INFORMATION_WITH_CARD_PHOTO:"IDENTIFICATION_INFORMATION_WITH_CARD_PHOTO",LIVENESS_TEST:"LIVENESS_TEST",IDENTIFICATION_INFORMATION_WITH_NFC:"IDENTIFICATION_INFORMATION_WITH_NFC",AGENT_CALL:"AGENT_CALL"},e.IdentifyOptionBuilder=class{constructor(){this.identityType=[],this.nfcExceptionCount=3,this.callConnectionTimeOut=1e4,this.videoRecordTime=5e3,this.openIntroPage=!0}setIdentityType(e){return Array.isArray(e)&&(this.identityType=e),this}setNfcExceptionCount(e){return this.nfcExceptionCount=e,this}setCallConnectionTimeOut(e){return this.callConnectionTimeOut=e,this}setVideoRecordTime(e){return this.videoRecordTime=e,this}setOpenIntroPage(e){return this.openIntroPage=e,this}build(){return new n(this)}},e.IdentifySdk=s,e.IdentifySdkBuilder=class{constructor(){this.api="",this.socket={url:"",port:""},this.stun={url:"",port:""},this.turn={url:"",port:"",username:"",password:""},this.myVideoElement=null,this.peerVideoElement=null,this.logLevel=t.INFO,this.lifeCycle={socket:{onConnectionLost(){},onError(){}},room:{onAgentCome(e){},onAgentLeave(e){}},videoCall:{onQueueUpdate(e){},onCancel(e){},onCall(e){},onTerminate(){},onRefuse(){}}},this.options=null}setApi(e){return this.api=e,this}setStun(e,t){return this.stun={url:e,port:t},this}setTurn(e,t,i,s){return this.turn={url:e,port:t,username:i,password:s},this}setMyVideoElement(e){return this.myVideoElement=e,this}setPeerVideoElement(e){return this.peerVideoElement=e,this}setLifeCycle(e){return this.lifeCycle=e,this}setOptions(e){return this.options=e,this}setLogLevel(e){return this.logLevel=e,this}build(){return new s(this)}},e.IdentityOptions=n,e}({});